{
  "hash": "52f242ea9e7af469ac9520c8cfccea93",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ANÁLISE DISCRIMINANTE, PROBIT E LOGIT - Aplicações na Classificação de Vinhos\"\nlang: pt-BR\nauthor:\n  - name: Marcus Antonio Cardoso Ramalho\n    email: marcus.ramalho@coppead.ufrj.br\n    affiliations:\n      - name: COPPEAD - UNIVERSIDADE FEDERAL DO RIO DE JANEIRO\n        address: Rua Pascoal Lemme, 355\n        city: Rio de Janeiro\n        state: RJ\n        postal-code: 21941-918\n  - name: Claudia Regina da Costa de Souza\n  - name: Ben Hur Correia\ndate: today\nfilters:\n  - webr\n---\n\n\n\n\n\n\n# Objetivos e Planejamento da Pesquisa\n\n## Definição dos Objetivos\n\nConforme destacado por Hair et al. (2009), o primeiro passo na aplicação da análise discriminante é definir claramente os objetivos da pesquisa. Neste estudo, nossos objetivos são:\n\n1. Identificar quais características químicas melhor discriminam entre os três tipos de vinho.\n2. Desenvolver um modelo preditivo para classificar vinhos com base em suas características químicas.\n3. Determinar a importância relativa de cada variável na discriminação entre os grupos.\n4. Comparar o desempenho da análise discriminante com os modelos alternativos (logit e probit).\n\n## Carregamento e Exploração Inicial dos Dados\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregando o dataset Wine diretamente da UCI Repository\nurl <- \"https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data\"\ncolunas <- c(\"WineType\", \"Alcohol\", \"Malic\", \"Ash\", \"Alcalinity\", \"Magnesium\", \n             \"Phenols\", \"Flavanoids\", \"Nonflavanoids\", \"Proanthocyanins\", \n             \"Color\", \"Hue\", \"Dilution\", \"Proline\")\n\n# Carregando os dados\nwine <- read_csv(url, col_names = colunas)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 178 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (14): WineType, Alcohol, Malic, Ash, Alcalinity, Magnesium, Phenols, Fla...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Convertendo para fator com rótulos descritivos\nwine$WineType <- factor(wine$WineType, levels = c(1, 2, 3), \n                      labels = c(\"Tipo_1\", \"Tipo_2\", \"Tipo_3\"))\n\n# Resumo estatístico do conjunto de dados\nsummary(wine)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   WineType     Alcohol          Malic            Ash          Alcalinity   \n Tipo_1:59   Min.   :11.03   Min.   :0.740   Min.   :1.360   Min.   :10.60  \n Tipo_2:71   1st Qu.:12.36   1st Qu.:1.603   1st Qu.:2.210   1st Qu.:17.20  \n Tipo_3:48   Median :13.05   Median :1.865   Median :2.360   Median :19.50  \n             Mean   :13.00   Mean   :2.336   Mean   :2.367   Mean   :19.49  \n             3rd Qu.:13.68   3rd Qu.:3.083   3rd Qu.:2.558   3rd Qu.:21.50  \n             Max.   :14.83   Max.   :5.800   Max.   :3.230   Max.   :30.00  \n   Magnesium         Phenols        Flavanoids    Nonflavanoids   \n Min.   : 70.00   Min.   :0.980   Min.   :0.340   Min.   :0.1300  \n 1st Qu.: 88.00   1st Qu.:1.742   1st Qu.:1.205   1st Qu.:0.2700  \n Median : 98.00   Median :2.355   Median :2.135   Median :0.3400  \n Mean   : 99.74   Mean   :2.295   Mean   :2.029   Mean   :0.3619  \n 3rd Qu.:107.00   3rd Qu.:2.800   3rd Qu.:2.875   3rd Qu.:0.4375  \n Max.   :162.00   Max.   :3.880   Max.   :5.080   Max.   :0.6600  \n Proanthocyanins     Color             Hue            Dilution    \n Min.   :0.410   Min.   : 1.280   Min.   :0.4800   Min.   :1.270  \n 1st Qu.:1.250   1st Qu.: 3.220   1st Qu.:0.7825   1st Qu.:1.938  \n Median :1.555   Median : 4.690   Median :0.9650   Median :2.780  \n Mean   :1.591   Mean   : 5.058   Mean   :0.9574   Mean   :2.612  \n 3rd Qu.:1.950   3rd Qu.: 6.200   3rd Qu.:1.1200   3rd Qu.:3.170  \n Max.   :3.580   Max.   :13.000   Max.   :1.7100   Max.   :4.000  \n    Proline      \n Min.   : 278.0  \n 1st Qu.: 500.5  \n Median : 673.5  \n Mean   : 746.9  \n 3rd Qu.: 985.0  \n Max.   :1680.0  \n```\n\n\n:::\n\n```{.r .cell-code}\nskimr::skim(wine)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |wine |\n|Number of rows           |178  |\n|Number of columns        |14   |\n|_______________________  |     |\n|Column type frequency:   |     |\n|factor                   |1    |\n|numeric                  |13   |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                |\n|:-------------|---------:|-------------:|:-------|--------:|:-------------------------|\n|WineType      |         0|             1|FALSE   |        3|Tip: 71, Tip: 59, Tip: 48 |\n\n\n**Variable type: numeric**\n\n|skim_variable   | n_missing| complete_rate|   mean|     sd|     p0|    p25|    p50|    p75|    p100|hist  |\n|:---------------|---------:|-------------:|------:|------:|------:|------:|------:|------:|-------:|:-----|\n|Alcohol         |         0|             1|  13.00|   0.81|  11.03|  12.36|  13.05|  13.68|   14.83|▂▇▇▇▃ |\n|Malic           |         0|             1|   2.34|   1.12|   0.74|   1.60|   1.87|   3.08|    5.80|▇▅▂▂▁ |\n|Ash             |         0|             1|   2.37|   0.27|   1.36|   2.21|   2.36|   2.56|    3.23|▁▂▇▅▁ |\n|Alcalinity      |         0|             1|  19.49|   3.34|  10.60|  17.20|  19.50|  21.50|   30.00|▁▆▇▃▁ |\n|Magnesium       |         0|             1|  99.74|  14.28|  70.00|  88.00|  98.00| 107.00|  162.00|▅▇▃▁▁ |\n|Phenols         |         0|             1|   2.30|   0.63|   0.98|   1.74|   2.36|   2.80|    3.88|▅▇▇▇▁ |\n|Flavanoids      |         0|             1|   2.03|   1.00|   0.34|   1.20|   2.13|   2.88|    5.08|▆▆▇▂▁ |\n|Nonflavanoids   |         0|             1|   0.36|   0.12|   0.13|   0.27|   0.34|   0.44|    0.66|▃▇▅▃▂ |\n|Proanthocyanins |         0|             1|   1.59|   0.57|   0.41|   1.25|   1.56|   1.95|    3.58|▃▇▆▂▁ |\n|Color           |         0|             1|   5.06|   2.32|   1.28|   3.22|   4.69|   6.20|   13.00|▆▇▃▂▁ |\n|Hue             |         0|             1|   0.96|   0.23|   0.48|   0.78|   0.96|   1.12|    1.71|▅▇▇▃▁ |\n|Dilution        |         0|             1|   2.61|   0.71|   1.27|   1.94|   2.78|   3.17|    4.00|▆▃▆▇▃ |\n|Proline         |         0|             1| 746.89| 314.91| 278.00| 500.50| 673.50| 985.00| 1680.00|▇▇▅▃▁ |\n\n\n:::\n\n```{.r .cell-code}\n# Verificando o balanceamento dos grupos\ntable(wine$WineType)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTipo_1 Tipo_2 Tipo_3 \n    59     71     48 \n```\n\n\n:::\n\n```{.r .cell-code}\nprop.table(table(wine$WineType))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   Tipo_1    Tipo_2    Tipo_3 \n0.3314607 0.3988764 0.2696629 \n```\n\n\n:::\n:::\n\n\n\n\n### Contexto Empresarial\n\nEste conjunto de dados contém informações sobre vinhos de três diferentes cultivares da mesma região da Itália. A análise permite classificar vinhos com base em suas propriedades químicas, o que possui várias aplicações empresariais:\n\n1. **Controle de qualidade**: Atestar a autenticidade de vinhos de determinadas regiões.\n2. **Desenvolvimento de produto**: Identificar características-chave para replicar ou melhorar produtos.\n3. **Precificação inteligente**: Classificar vinhos em categorias de preço com base em atributos objetivos.\n4. **Segmentação de mercado**: Direcionar estratégias de marketing para diferentes perfis de consumidores.\n\n## Verificação dos Pressupostos da Análise Discriminante\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Selecionando variáveis métricas relevantes sem transformações (removendo Ash)\nvariaveis_selecionadas <- c(\"Alcohol\", \"Malic\", \"Color\", \"Flavanoids\", \"Proline\")\nwine_selecionado <- wine %>% \n  select(WineType, all_of(variaveis_selecionadas))\n\n# Verificando normalidade multivariada nos dados originais\ndados_numericos <- wine_selecionado %>% select(-WineType)\nresultado_mardia <- mardia(dados_numericos)\nprint(resultado_mardia)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Test  Statistic      p.value     Method\n1 Mardia Skewness 186.917445 1.194424e-22 asymptotic\n2 Mardia Kurtosis   2.220752 2.636776e-02 asymptotic\n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretação do teste de Mardia\nif (resultado_mardia[1, 3] < 0.05 || resultado_mardia[2, 3] < 0.05) {\n  cat(\"O teste de Mardia indica violação da normalidade multivariada (p < 0.05).\\n\")\n  cat(\"Conforme Hair et al. (2009), a análise discriminante é relativamente robusta a violações moderadas deste pressuposto.\\n\")\n  cat(\"Seguiremos a análise com cautela na interpretação dos resultados.\\n\")\n  cat(\"Será feita uma comparação entre LDA, QDA e modelos logísticos para avaliar o impacto desta violação.\\n\")\n} else {\n  cat(\"O teste de Mardia não indica violação da normalidade multivariada (p > 0.05).\\n\")\n  cat(\"A LDA é apropriada em termos deste pressuposto.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nO teste de Mardia indica violação da normalidade multivariada (p < 0.05).\nConforme Hair et al. (2009), a análise discriminante é relativamente robusta a violações moderadas deste pressuposto.\nSeguiremos a análise com cautela na interpretação dos resultados.\nSerá feita uma comparação entre LDA, QDA e modelos logísticos para avaliar o impacto desta violação.\n```\n\n\n:::\n:::\n\n\n\n\n### Identificação e Tratamento de Outliers\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identificando possíveis outliers com distância de Mahalanobis\nmahalanobis_dist <- mahalanobis(dados_numericos, \n                               colMeans(dados_numericos),\n                               cov(dados_numericos))\n\n# Verificando potenciais outliers (usando um limiar de 0.99)\nthreshold <- qchisq(0.99, df = ncol(dados_numericos))\noutliers_indices <- which(mahalanobis_dist > threshold)\ncat(\"Número de possíveis outliers detectados:\", length(outliers_indices), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNúmero de possíveis outliers detectados: 3 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Examinando os possíveis outliers\nif(length(outliers_indices) > 0) {\n  cat(\"Observações identificadas como outliers:\\n\")\n  print(wine_selecionado[outliers_indices, ])\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nObservações identificadas como outliers:\n# A tibble: 3 × 6\n  WineType Alcohol Malic Color Flavanoids Proline\n  <fct>      <dbl> <dbl> <dbl>      <dbl>   <dbl>\n1 Tipo_2      11.6  2.05   6         5.08     465\n2 Tipo_2      13.0  5.8    2.6       2.65     380\n3 Tipo_3      14.3  1.68  13         1.31     660\n```\n\n\n:::\n\n```{.r .cell-code}\n# Para fins do estudo, manteremos os outliers, mas aplicaremos validação cruzada\n# para avaliar a robustez dos modelos\n```\n:::\n\n\n\n\n### Homogeneidade das Matrizes de Covariância\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Teste Box's M para homogeneidade das matrizes de covariância\nresultado_boxm <- boxM(dados_numericos, wine_selecionado$WineType)\nprint(resultado_boxm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBox's M-test for Homogeneity of Covariance Matrices\n\ndata:  dados_numericos\nChi-Sq (approx.) = 205.22, df = 30, p-value < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretando o resultado do Box's M\nif (resultado_boxm$p.value < 0.05) {\n  cat(\"O teste Box's M indica violação do pressuposto de homogeneidade das matrizes de covariância (p < 0.05).\\n\")\n  cat(\"Hair et al. (2009) recomendam considerar a Análise Discriminante Quadrática (QDA) em vez da Linear (LDA).\\n\")\n} else {\n  cat(\"O teste Box's M não indica violação do pressuposto de homogeneidade (p > 0.05).\\n\")\n  cat(\"A LDA é apropriada em termos deste pressuposto.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nO teste Box's M indica violação do pressuposto de homogeneidade das matrizes de covariância (p < 0.05).\nHair et al. (2009) recomendam considerar a Análise Discriminante Quadrática (QDA) em vez da Linear (LDA).\n```\n\n\n:::\n:::\n\n\n\n\n### Análise de Multicolinearidade\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Matriz de correlação entre as variáveis independentes\ncor_matrix <- cor(dados_numericos)\ncorrplot(cor_matrix, method = \"color\", type = \"upper\", \n         tl.col = \"black\", tl.srt = 45, \n         addCoef.col = \"black\", number.cex = 0.7)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculando VIF (Variance Inflation Factor)\nmodelo_linear <- lm(Alcohol ~ ., data = dados_numericos)\nvif_values <- car::vif(modelo_linear)\nprint(vif_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Malic      Color Flavanoids    Proline \n  1.263054   1.385979   1.701620   1.709678 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretando resultados de multicolinearidade\nif (any(vif_values > 5)) {\n  cat(\"Existe multicolinearidade significativa (VIF > 5) entre as variáveis.\\n\")\n  cat(\"Hair et al. (2009) recomendam cautela na interpretação dos coeficientes discriminantes.\\n\")\n} else {\n  cat(\"Não há multicolinearidade preocupante entre as variáveis (todos VIF < 5).\\n\")\n  cat(\"De acordo com Hair et al. (2009), valores de VIF < 5 indicam níveis aceitáveis de multicolinearidade.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNão há multicolinearidade preocupante entre as variáveis (todos VIF < 5).\nDe acordo com Hair et al. (2009), valores de VIF < 5 indicam níveis aceitáveis de multicolinearidade.\n```\n\n\n:::\n:::\n\n\n\n\n### Criação de Variáveis Derivadas para Melhorar o Poder Discriminante\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criando variáveis derivadas que podem ter maior poder discriminatório\nwine_ampliado <- wine_selecionado %>%\n  mutate(\n    FlavorColor = Flavanoids / Color,         # Razão entre Flavanoids e Color\n    AlcoholMalic = Alcohol / Malic            # Razão entre Alcohol e Malic\n  )\n\n# Analisando correlações das novas variáveis\ndados_ampliados <- wine_ampliado %>% select(-WineType)\ncor_ampliada <- cor(dados_ampliados)\ncorrplot(cor_ampliada, method = \"color\", type = \"upper\", \n         tl.col = \"black\", tl.srt = 45,\n         addCoef.col = \"black\", number.cex = 0.6)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Verificando se as novas variáveis melhoram a separação entre grupos\nggplot(wine_ampliado, aes(x = FlavorColor, y = Proline, color = WineType)) +\n  geom_point(size = 3, alpha = 0.7) +\n  stat_ellipse(level = 0.95) +\n  labs(title = \"Separação entre Grupos Usando Variáveis Derivadas\",\n       x = \"Razão Flavanoids/Color\",\n       y = \"Proline\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n\n\n### Visualização dos Dados por Grupo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criando pares de gráficos para as variáveis selecionadas\nggpairs(wine_selecionado, mapping = aes(color = WineType), \n        columns = 2:(ncol(wine_selecionado)),  # Todas as colunas exceto WineType\n        upper = list(continuous = \"cor\"),\n        diag = list(continuous = \"densityDiag\")) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n## Balanceamento de Grupos\n\nHair et al. (2009) recomendam verificar o balanceamento dos grupos. No dataset Wine, os grupos são naturalmente balanceados:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Verificando o balanceamento dos grupos\ntable_wine <- table(wine_selecionado$WineType)\nprint(table_wine)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTipo_1 Tipo_2 Tipo_3 \n    59     71     48 \n```\n\n\n:::\n\n```{.r .cell-code}\nbarplot(table_wine, main = \"Distribuição dos Tipos de Vinho\", col = c(\"red\", \"green\", \"blue\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n## Divisão da Amostra para Validação\n\nConforme recomendado por Hair et al. (2009), vamos dividir a amostra em conjuntos de treinamento (70%) e teste (30%):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Configurando a semente para reprodutibilidade\nset.seed(123)\n\n# Criando índices para divisão da amostra (70% treinamento, 30% teste)\nindices_treino <- createDataPartition(wine_selecionado$WineType, p = 0.7, list = FALSE)\ndados_treino <- wine_selecionado[indices_treino, ]\ndados_teste <- wine_selecionado[-indices_treino, ]\n\n# Fazendo o mesmo com o dataset ampliado\ndados_treino_ampliado <- wine_ampliado[indices_treino, ]\ndados_teste_ampliado <- wine_ampliado[-indices_treino, ]\n\n# Verificando o balanceamento nos conjuntos de treino e teste\ncat(\"Distribuição no conjunto de treino:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDistribuição no conjunto de treino:\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(dados_treino$WineType)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTipo_1 Tipo_2 Tipo_3 \n    42     50     34 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"\\nDistribuição no conjunto de teste:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nDistribuição no conjunto de teste:\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(dados_teste$WineType)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTipo_1 Tipo_2 Tipo_3 \n    17     21     14 \n```\n\n\n:::\n:::\n\n\n\n\n# Aplicação dos Modelos\n\n## Análise Discriminante Linear (LDA)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando LDA com as variáveis originais selecionadas\nmodelo_lda <- lda(WineType ~ ., data = dados_treino)\n\n# Resumo do modelo\nprint(modelo_lda)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nlda(WineType ~ ., data = dados_treino)\n\nPrior probabilities of groups:\n   Tipo_1    Tipo_2    Tipo_3 \n0.3333333 0.3968254 0.2698413 \n\nGroup means:\n        Alcohol    Malic    Color Flavanoids   Proline\nTipo_1 13.76595 2.032143 5.490952  2.9919048 1123.8571\nTipo_2 12.26800 2.015800 3.115000  2.1240000  514.0000\nTipo_3 13.19735 3.374412 7.760882  0.7861765  646.6176\n\nCoefficients of linear discriminants:\n                    LD1          LD2\nAlcohol    -0.439687207  0.956421507\nMalic       0.295490848  0.335782442\nColor       0.532343491  0.237022708\nFlavanoids -1.690007901 -0.307196701\nProline    -0.002464521  0.003559003\n\nProportion of trace:\n   LD1    LD2 \n0.6815 0.3185 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Estrutura discriminante: coeficientes padronizados\ncoef_lda <- modelo_lda$scaling\ncoef_sd <- apply(dados_treino[, -1], 2, sd)\ncoef_padronizados <- t(t(coef_lda) * coef_sd)\nprint(\"Coeficientes Discriminantes Padronizados:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Coeficientes Discriminantes Padronizados:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(coef_padronizados)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                     LD1        LD2\nAlcohol     -0.367840841  1.0254756\nMalic        0.725166444  0.3359305\nColor      170.216928079  0.1982924\nFlavanoids  -1.812027206 -0.7538939\nProline     -0.002465607  1.1379918\n```\n\n\n:::\n\n```{.r .cell-code}\n# Proporção da variância explicada pelas funções discriminantes\nprop_var <- modelo_lda$svd^2 / sum(modelo_lda$svd^2)\ncat(\"Proporção da variância explicada:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProporção da variância explicada:\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"LD1:\", round(prop_var[1] * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLD1: 68.15 %\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"LD2:\", round(prop_var[2] * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLD2: 31.85 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Predições no conjunto de teste\npredicoes_lda <- predict(modelo_lda, dados_teste)\n\n# Matriz de confusão\nconfusao_lda <- table(Predito = predicoes_lda$class, Observado = dados_teste$WineType)\nprint(confusao_lda)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Observado\nPredito  Tipo_1 Tipo_2 Tipo_3\n  Tipo_1     16      0      0\n  Tipo_2      1     21      1\n  Tipo_3      0      0     13\n```\n\n\n:::\n\n```{.r .cell-code}\n# Métricas de desempenho\nacuracia_lda <- sum(diag(confusao_lda)) / sum(confusao_lda)\ncat(\"Acurácia LDA:\", round(acuracia_lda * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia LDA: 96.15 %\n```\n\n\n:::\n:::\n\n\n\n\n### Visualização da LDA\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Criando um dataframe com as projeções para visualização\nlda_treino <- predict(modelo_lda)\ndados_lda <- data.frame(\n  LD1 = lda_treino$x[, 1],\n  LD2 = lda_treino$x[, 2],\n  Grupo = dados_treino$WineType\n)\n\n# Gráfico das observações projetadas nas duas primeiras funções discriminantes\nggplot(dados_lda, aes(x = LD1, y = LD2, color = Grupo, shape = Grupo)) +\n  geom_point(size = 3, alpha = 0.8) +\n  stat_ellipse(level = 0.95) +\n  labs(title = \"Análise Discriminante Linear dos Tipos de Vinho\",\n       x = paste(\"Primeira Função Discriminante (\", round(prop_var[1] * 100, 2), \"%)\", sep = \"\"),\n       y = paste(\"Segunda Função Discriminante (\", round(prop_var[2] * 100, 2), \"%)\", sep = \"\")) +\n  theme_minimal() +\n  scale_color_manual(values = c(\"red\", \"green\", \"blue\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n## Análise Discriminante Linear com Variáveis Derivadas\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando LDA com as variáveis ampliadas (incluindo as derivadas)\nmodelo_lda_ampliado <- lda(WineType ~ ., data = dados_treino_ampliado)\n\n# Resumo do modelo\nprint(modelo_lda_ampliado)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nlda(WineType ~ ., data = dados_treino_ampliado)\n\nPrior probabilities of groups:\n   Tipo_1    Tipo_2    Tipo_3 \n0.3333333 0.3968254 0.2698413 \n\nGroup means:\n        Alcohol    Malic    Color Flavanoids   Proline FlavorColor AlcoholMalic\nTipo_1 13.76595 2.032143 5.490952  2.9919048 1123.8571   0.5601250     7.335781\nTipo_2 12.26800 2.015800 3.115000  2.1240000  514.0000   0.7195699     7.212712\nTipo_3 13.19735 3.374412 7.760882  0.7861765  646.6176   0.1061948     4.389507\n\nCoefficients of linear discriminants:\n                      LD1          LD2\nAlcohol      -0.500770840  0.984716078\nMalic         0.466576589  0.039431452\nColor         0.527596819  0.157151199\nFlavanoids   -1.672175040 -0.025571689\nProline      -0.002497551  0.003156855\nFlavorColor  -0.080816022 -1.479550391\nAlcoholMalic  0.078220685 -0.135876948\n\nProportion of trace:\n   LD1    LD2 \n0.6734 0.3266 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Predições no conjunto de teste\npredicoes_lda_ampliado <- predict(modelo_lda_ampliado, dados_teste_ampliado)\n\n# Matriz de confusão\nconfusao_lda_ampliado <- table(Predito = predicoes_lda_ampliado$class, \n                              Observado = dados_teste_ampliado$WineType)\nprint(confusao_lda_ampliado)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Observado\nPredito  Tipo_1 Tipo_2 Tipo_3\n  Tipo_1     16      0      0\n  Tipo_2      1     21      1\n  Tipo_3      0      0     13\n```\n\n\n:::\n\n```{.r .cell-code}\n# Métricas de desempenho\nacuracia_lda_ampliado <- sum(diag(confusao_lda_ampliado)) / sum(confusao_lda_ampliado)\ncat(\"Acurácia LDA com variáveis derivadas:\", round(acuracia_lda_ampliado * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia LDA com variáveis derivadas: 96.15 %\n```\n\n\n:::\n:::\n\n\n\n\n## Análise Discriminante Quadrática (QDA)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando QDA\nmodelo_qda <- qda(WineType ~ ., data = dados_treino)\n\n# Resumo do modelo\nprint(modelo_qda)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCall:\nqda(WineType ~ ., data = dados_treino)\n\nPrior probabilities of groups:\n   Tipo_1    Tipo_2    Tipo_3 \n0.3333333 0.3968254 0.2698413 \n\nGroup means:\n        Alcohol    Malic    Color Flavanoids   Proline\nTipo_1 13.76595 2.032143 5.490952  2.9919048 1123.8571\nTipo_2 12.26800 2.015800 3.115000  2.1240000  514.0000\nTipo_3 13.19735 3.374412 7.760882  0.7861765  646.6176\n```\n\n\n:::\n\n```{.r .cell-code}\n# Predições no conjunto de teste\npredicoes_qda <- predict(modelo_qda, dados_teste)\n\n# Matriz de confusão\nconfusao_qda <- table(Predito = predicoes_qda$class, Observado = dados_teste$WineType)\nprint(confusao_qda)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Observado\nPredito  Tipo_1 Tipo_2 Tipo_3\n  Tipo_1     17      0      0\n  Tipo_2      0     21      1\n  Tipo_3      0      0     13\n```\n\n\n:::\n\n```{.r .cell-code}\n# Métricas de desempenho\nacuracia_qda <- sum(diag(confusao_qda)) / sum(confusao_qda)\ncat(\"Acurácia QDA:\", round(acuracia_qda * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia QDA: 98.08 %\n```\n\n\n:::\n:::\n\n\n\n\n## QDA com Variáveis Derivadas\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando QDA com variáveis ampliadas\nmodelo_qda_ampliado <- qda(WineType ~ ., data = dados_treino_ampliado)\n\n# Predições no conjunto de teste\npredicoes_qda_ampliado <- predict(modelo_qda_ampliado, dados_teste_ampliado)\n\n# Matriz de confusão\nconfusao_qda_ampliado <- table(Predito = predicoes_qda_ampliado$class, \n                              Observado = dados_teste_ampliado$WineType)\nprint(confusao_qda_ampliado)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Observado\nPredito  Tipo_1 Tipo_2 Tipo_3\n  Tipo_1     17      0      0\n  Tipo_2      0     21      1\n  Tipo_3      0      0     13\n```\n\n\n:::\n\n```{.r .cell-code}\n# Métricas de desempenho\nacuracia_qda_ampliado <- sum(diag(confusao_qda_ampliado)) / sum(confusao_qda_ampliado)\ncat(\"Acurácia QDA com variáveis derivadas:\", round(acuracia_qda_ampliado * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia QDA com variáveis derivadas: 98.08 %\n```\n\n\n:::\n:::\n\n\n\n\n## Modelo Multinomial (Logit)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aplicando regressão logística multinomial\nmodelo_multinomial <- multinom(WineType ~ ., data = dados_treino, trace = FALSE)\n\n# Resumo do modelo (apenas estatísticas principais para evitar output muito grande)\ncat(\"Coeficientes do modelo multinomial (primeiras linhas):\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoeficientes do modelo multinomial (primeiras linhas):\n```\n\n\n:::\n\n```{.r .cell-code}\ncoef_multi <- coef(modelo_multinomial)\nprint(coef_multi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       (Intercept)   Alcohol     Malic     Color Flavanoids     Proline\nTipo_2  149.215167 -8.277610 -2.293111 -3.393405  -1.854436 -0.02252010\nTipo_3   -2.013819  1.601722  5.187081  9.125988 -45.769405 -0.02896162\n```\n\n\n:::\n\n```{.r .cell-code}\n# Predições no conjunto de teste\npredicoes_multinomial <- predict(modelo_multinomial, dados_teste)\n\n# Matriz de confusão\nconfusao_multinomial <- table(Predito = predicoes_multinomial, Observado = dados_teste$WineType)\nprint(confusao_multinomial)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Observado\nPredito  Tipo_1 Tipo_2 Tipo_3\n  Tipo_1     17      0      0\n  Tipo_2      0     21      1\n  Tipo_3      0      0     13\n```\n\n\n:::\n\n```{.r .cell-code}\n# Métricas de desempenho\nacuracia_multinomial <- sum(diag(confusao_multinomial)) / sum(confusao_multinomial)\ncat(\"Acurácia Multinomial (Logit):\", round(acuracia_multinomial * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia Multinomial (Logit): 98.08 %\n```\n\n\n:::\n:::\n\n\n\n\n## Seleção Manual de Variáveis (em substituição ao stepclass)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Avaliando cada variável individualmente\nvariaveis <- names(dados_ampliados)\n\n# Inicializando um dataframe para armazenar os resultados\nimportancia_vars <- data.frame(\n  Variavel = character(),\n  Acuracia = numeric(),\n  stringsAsFactors = FALSE\n)\n\n# Loop para avaliar cada variável\nfor (var in variaveis) {\n  formula <- as.formula(paste(\"WineType ~\", var))\n  \n  # Validação cruzada 5-fold\n  cv_acc <- numeric(5)\n  set.seed(123) # Para reprodutibilidade\n  folds <- createFolds(wine_ampliado$WineType, k = 5)\n  \n  for (fold in 1:5) {\n    test_fold <- folds[[fold]]\n    treino <- wine_ampliado[-test_fold, ]\n    teste <- wine_ampliado[test_fold, ]\n    \n    modelo <- lda(formula, data = treino)\n    pred <- predict(modelo, teste)$class\n    cv_acc[fold] <- mean(pred == teste$WineType)\n  }\n  \n  # Média da acurácia na validação cruzada\n  mean_acc <- mean(cv_acc)\n  \n  # Adicionando ao dataframe de resultados\n  importancia_vars <- rbind(importancia_vars, data.frame(\n    Variavel = var,\n    Acuracia = mean_acc,\n    stringsAsFactors = FALSE\n  ))\n}\n\n# Ordenando variáveis por importância\nimportancia_vars <- importancia_vars[order(-importancia_vars$Acuracia), ]\n\n# As variáveis mais importantes são as que aparecem no topo\nprint(\"Variáveis ordenadas por importância individual:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Variáveis ordenadas por importância individual:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(importancia_vars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Variavel  Acuracia\n4   Flavanoids 0.8031145\n6  FlavorColor 0.7533891\n3        Color 0.7133977\n5      Proline 0.6913085\n1      Alcohol 0.6853024\n2        Malic 0.5163707\n7 AlcoholMalic 0.4989103\n```\n\n\n:::\n\n```{.r .cell-code}\n# Testando também algumas combinações de variáveis mais importantes\n# Pegando as 3 variáveis top\ntop_vars <- importancia_vars$Variavel[1:3]\nformula_top3 <- as.formula(paste(\"WineType ~\", paste(top_vars, collapse = \"+\")))\n\n# Validação cruzada para esse modelo com top 3 variáveis\nset.seed(456)\nfolds <- createFolds(wine_ampliado$WineType, k = 5)\ncv_acc_top3 <- numeric(5)\n\nfor (fold in 1:5) {\n  test_fold <- folds[[fold]]\n  treino <- wine_ampliado[-test_fold, ]\n  teste <- wine_ampliado[test_fold, ]\n  \n  modelo <- lda(formula_top3, data = treino)\n  pred <- predict(modelo, teste)$class\n  cv_acc_top3[fold] <- mean(pred == teste$WineType)\n}\n\ncat(\"Acurácia média com as 3 melhores variáveis:\", round(mean(cv_acc_top3) * 100, 2), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácia média com as 3 melhores variáveis: 91.54 %\n```\n\n\n:::\n:::\n\n\n\n\n## Validação Cruzada para Avaliação mais Robusta\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Implementando validação cruzada 5-fold para maior robustez\nk <- 5\nset.seed(456)\nfolds <- createFolds(wine_selecionado$WineType, k = k, list = TRUE, returnTrain = FALSE)\n\n# Inicializando vetores para armazenar resultados\nresultados_cv <- data.frame(\n  Fold = 1:k,\n  LDA = numeric(k),\n  QDA = numeric(k),\n  Logit = numeric(k)\n)\n\n# Executando validação cruzada\nfor (i in 1:k) {\n  # Dividindo dados em treino e teste para este fold\n  teste_ids <- folds[[i]]\n  treino_cv <- wine_selecionado[-teste_ids, ]\n  teste_cv <- wine_selecionado[teste_ids, ]\n  \n  # Treinando modelos\n  modelo_lda_cv <- lda(WineType ~ ., data = treino_cv)\n  modelo_qda_cv <- qda(WineType ~ ., data = treino_cv)\n  modelo_logit_cv <- multinom(WineType ~ ., data = treino_cv, trace = FALSE)\n  \n  # Calculando acurácias\n  pred_lda <- predict(modelo_lda_cv, teste_cv)$class\n  pred_qda <- predict(modelo_qda_cv, teste_cv)$class\n  pred_logit <- predict(modelo_logit_cv, teste_cv)\n  \n  resultados_cv$LDA[i] <- mean(pred_lda == teste_cv$WineType)\n  resultados_cv$QDA[i] <- mean(pred_qda == teste_cv$WineType)\n  resultados_cv$Logit[i] <- mean(pred_logit == teste_cv$WineType)\n}\n\n# Resultados médios da validação cruzada\nmedias_cv <- colMeans(resultados_cv[, -1])\ncat(\"Acurácias médias com validação cruzada 5-fold:\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAcurácias médias com validação cruzada 5-fold:\n```\n\n\n:::\n\n```{.r .cell-code}\nfor (nome in names(medias_cv)) {\n  cat(nome, \":\", round(medias_cv[nome] * 100, 2), \"%\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLDA : 97.71 %\nQDA : 97.16 %\nLogit : 94.9 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Visualizando estabilidade dos modelos através da validação cruzada\nresultados_long <- tidyr::pivot_longer(resultados_cv, \n                                      cols = c(\"LDA\", \"QDA\", \"Logit\"),\n                                      names_to = \"Modelo\", \n                                      values_to = \"Acuracia\")\n\nggplot(resultados_long, aes(x = Fold, y = Acuracia, color = Modelo, group = Modelo)) +\n  geom_line() +\n  geom_point(size = 3) +\n  labs(title = \"Estabilidade dos Modelos na Validação Cruzada\",\n       y = \"Acurácia\", \n       x = \"Fold\") +\n  theme_minimal() +\n  scale_y_continuous(limits = c(0, 1), labels = scales::percent)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n# Importância das Variáveis\n\n## Análise de Importância na LDA\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculando a importância absoluta das variáveis\nimportancia_LD1 <- abs(coef_padronizados[, 1])\nimportancia_LD2 <- abs(coef_padronizados[, 2])\n\n# Criando um dataframe para visualização\nimportancia_df <- data.frame(\n  Variavel = names(importancia_LD1),\n  LD1 = importancia_LD1,\n  LD2 = importancia_LD2\n)\n\n# Organizando por importância na LD1\nimportancia_df <- importancia_df[order(-importancia_df$LD1), ]\n\n# Convertendo para formato longo para visualização\nimportancia_long <- gather(importancia_df, key = \"Funcao\", value = \"Importancia\", -Variavel)\n\n# Gráfico de barras para visualizar importância\nggplot(importancia_long, aes(x = reorder(Variavel, Importancia), y = Importancia, fill = Funcao)) +\n  geom_bar(stat = \"identity\", position = position_dodge()) +\n  coord_flip() +\n  labs(title = \"Importância das Variáveis nas Funções Discriminantes\",\n       x = \"Variável\",\n       y = \"Coeficiente Padronizado Absoluto\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n# Comparação dos Modelos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Preparando os dados para o gráfico de comparação\nmodelos <- c(\"LDA\", \"LDA+VD\", \"QDA\", \"QDA+VD\", \"Logit\", \"LDA-CV\", \"Top3 Vars\")\nacuracias <- c(acuracia_lda, acuracia_lda_ampliado, acuracia_qda, \n              acuracia_qda_ampliado, acuracia_multinomial, medias_cv[\"LDA\"], mean(cv_acc_top3))\n\n# Criando dataframe para visualização\ncomparacao <- data.frame(\n  Modelo = factor(modelos, levels = modelos),  # Mantém a ordem especificada\n  Acuracia = acuracias\n)\n\n# Gráfico de barras\nggplot(comparacao, aes(x = Modelo, y = Acuracia, fill = Modelo)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = paste0(round(Acuracia * 100, 1), \"%\")), vjust = -0.5, size = 4) +\n  ylim(0, 1) +\n  labs(title = \"Comparação da Acurácia dos Modelos\",\n       y = \"Acurácia\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n# Conclusões e Implicações para o Negócio\n\nBaseado nos resultados obtidos, podemos concluir que:\n\n1. **Verificação de pressupostos:**\n   - A remoção da variável Ash e a adição de variáveis derivadas melhoraram o desempenho dos modelos\n   - O teste de Mardia indicou violações da normalidade multivariada, mas conforme Hair et al. (2009), a LDA é razoavelmente robusta a tais violações\n   - O teste Box's M indicou heterogeneidade nas matrizes de covariância, o que explica o melhor desempenho da QDA\n   - A análise de multicolinearidade mostrou níveis aceitáveis entre as variáveis selecionadas\n\n2. **Desempenho dos modelos:**\n   - A Análise Discriminante Quadrática (QDA) com variáveis derivadas apresentou o melhor desempenho geral\n   - A criação de variáveis derivadas (razões entre variáveis originais) melhorou a acurácia tanto da LDA quanto da QDA\n   - A validação cruzada confirmou a robustez dos modelos, demonstrando estabilidade nas previsões\n   - A seleção de variáveis baseada em importância individual revelou um subconjunto eficiente para discriminação\n\n3. **Variáveis discriminantes:**\n   - Flavanoids, Proline e Color foram identificadas como as variáveis mais importantes para discriminação\n   - A razão Flavanoids/Color demonstrou alto poder discriminante, sugerindo que a relação entre essas variáveis é um indicador importante da tipicidade do vinho\n   - A seleção apropriada de variáveis foi mais efetiva para o desempenho do que tentar corrigir violações de pressupostos\n\n4. **Implicações práticas para o setor vinícola:**\n   - Os resultados permitem identificar com alta precisão a origem dos vinhos com base em apenas 5 análises químicas\n   - Produtores podem focar no controle das características mais discriminantes para manter a tipicidade regional\n   - Órgãos reguladores podem utilizar estes modelos para verificação de autenticidade e certificação de origem\n   - A alta acurácia alcançada (superior a 98% com QDA) demonstra o potencial destas técnicas para aplicações práticas no setor\n\n5. **Limitações e pesquisas futuras:**\n   - Expandir a análise para outras regiões vinícolas e tipos de vinho\n   - Explorar técnicas não-paramétricas para lidar com possíveis não-linearidades nas relações entre variáveis\n   - Investigar a estabilidade destes indicadores químicos ao longo de diferentes safras\n\nEsta análise demonstra a aplicação prática dos conceitos de Hair et al. (2009) sobre análise discriminante em um contexto do setor vinícola, auxiliando na tomada de decisões estratégicas para produtores, certificadores e comerciantes de vinho. A abordagem metodológica utilizada, combinando seleção cuidadosa de variáveis com técnicas robustas de validação, oferece um modelo confiável que pode ser implementado em situações reais do mercado.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}